{"ast":null,"code":"import { GoogleLoginProvider } from 'angularx-social-login';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../user.service\";\nimport * as i4 from \"angularx-social-login\";\nimport * as i5 from \"@angular/material/button\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    //userForm!: FormGroup\n    constructor(router, fb, userSvc, socialAuthService, activatedRoute) {\n      this.router = router;\n      this.fb = fb;\n      this.userSvc = userSvc;\n      this.socialAuthService = socialAuthService;\n      this.activatedRoute = activatedRoute;\n    }\n\n    ngOnInit() {\n      this.activatedRoute.queryParams.subscribe(params => {\n        console.log(params);\n        this.idDrink = params['idDrink'];\n        console.log(\"gotten this\", this.idDrink);\n      }); // this.userForm = this.fb.group({\n      //   user: this.fb.control('', [Validators.required, Validators.minLength(3)]),\n      //   email: this.fb.control('')\n      //   /* check if email has auto-validators. Yes, but only to check for @ */\n      // })\n    } //if using traditional log in, may not show log in at every page unlike SocialAuthLogin\n    // onLogin(){\n    //   const u: User = this.userForm.value as User\n    //   console.log(\">>>user: \", u);\n    //   this.userSvc.postUser(u)\n    //     .then(result => {\n    //       console.log(\"postuser response: \", result)\n    //         this.userForm.reset();\n    //         alert('Details Verified')\n    //         this.router.navigate(['/search'])\n    //     })\n    //     .catch(error => {\n    //       alert('user not added');\n    //       console.error('Error', error);\n    //     })\n    //   }\n\n\n    loginWithGoogle() {\n      this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID).then(result => {\n        console.log(\"google response: \", result);\n        let u = {\n          user: '',\n          email: ''\n        };\n        u.user = result.name;\n        u.email = result.email;\n        console.log(\"User object: \", u);\n        this.userSvc.postUser(u).then(result => {\n          console.log(\"postuser response: \", result);\n          alert('Details Verified');\n          /* this.router.navigate(['/user', u.email]) */\n\n          this.router.navigate(['/cocktail', this.idDrink]);\n        }).catch(error => {\n          alert('user not added');\n          console.error('Error', error);\n        });\n      }).catch(error => {\n        alert('Google account not signed in');\n        console.error('Error', error);\n        this.router.navigate(['/cocktail', this.idDrink]);\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.SocialAuthService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 7,\n    vars: 0,\n    consts: [[\"mat-raised-button\", \"\", 1, \"google-login-btn\", 3, \"click\"], [\"mat-flat-button\", \"\", \"color\", \"stroked\", \"type\", \"button\", \"onclick\", \"history.go(-1)\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Login with Gmail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_2_listener() {\n          return ctx.loginWithGoogle();\n        });\n        i0.ɵɵtext(3, \"Google\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\");\n        i0.ɵɵelementStart(5, \"button\", 1);\n        i0.ɵɵtext(6, \"Back to Drink\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i5.MatButton],\n    styles: [\".container[_ngcontent-%COMP%]{margin-top:30px}label[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-left;text-align:left;width:50px}.google-login-btn[_ngcontent-%COMP%]{background-image:url(google-logo.702aadcacc5aa45a.png);background-repeat:no-repeat;background-size:20%;background-position:10%;padding-left:10%;margin-bottom:1.5em}.mat-flat-button[_ngcontent-%COMP%]{border:.1em solid lightgray}.mat-flat-button[_ngcontent-%COMP%]:hover{background:#e7e7e7}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}